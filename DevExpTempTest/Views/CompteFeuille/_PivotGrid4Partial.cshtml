@using DevExpress.Web;
@using DevExpress.Web.Mvc;
@using DevExpress.XtraPivotGrid;
@using DevExpress.XtraPivotGrid.Customization;



@Html.DevExpress().PivotGrid(settings =>
{
    settings.Name = "PivotGrid4";
    settings.CallbackRouteValues = new { Controller = "CompteFeuille", Action = "PivotGrid4Partial" };


    settings.Width = Unit.Percentage(100);
    settings.Height = Unit.Pixel(600);

    settings.OptionsView.VerticalScrollingMode = PivotScrollingMode.Virtual;
    settings.OptionsView.HorizontalScrollingMode = PivotScrollingMode.Virtual;
    settings.OptionsView.VerticalScrollBarMode = ScrollBarMode.Auto;
    settings.OptionsView.HorizontalScrollBarMode = ScrollBarMode.Auto;
    settings.OptionsView.ShowFilterHeaders = true;
    settings.OptionsCustomization.CustomizationWindowHeight = 150;
    settings.OptionsCustomization.CustomizationWindowWidth = 50;
    settings.OptionsCustomization.CustomizationFormStyle = CustomizationFormStyle.Excel2007;
    settings.OptionsView.GroupFieldsInCustomizationWindow = true;

    settings.ClientSideEvents.CellClick = "function(sender, e) { window.alert('Row index: '+ e.RowIndex) }";

    settings.OptionsPager.RowsPerPage = 100000;
    settings.OptionsPager.ColumnsPerPage = 15;
    settings.OptionsPager.Visible = false;
    settings.OptionsFilter.NativeCheckBoxes = true;


    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "Code";
        field.Caption = "Code";
        field.Visible = false;
    });
    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "Libelle";
        field.Caption = "Libelle";
        field.Visible = false;
    });
    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "CodeCompteRacineParent";
        field.Caption = "CodeCompteRacineParent";
        field.Visible = false;
    });
    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "TypeTiers";
        field.Caption = "TypeTiers";
        field.Visible = false;
    });
    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "CodeTiers";
        field.Caption = "CodeTiers";
        field.Visible = false;
    });
    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "AdresseLogique";
        field.Caption = "AdresseLogique";
        field.Visible = false;
    });
    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "AdressePhysique";
        field.Caption = "AdressePhysique";
        field.Visible = false;
    });
    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "Journal";
        field.Caption = "Journal";
        field.Visible = false;
    });
    settings.Fields.Add(field =>
    {
        field.Area = PivotArea.FilterArea;
        field.FieldName = "CategorieTiers";
        field.Caption = "CategorieTiers";
        field.Visible = false;
    });
}).Bind(Model).GetHtml()